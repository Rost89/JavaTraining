// ticTacToeGame.
package ticTacToeGame;

import java.util.Random;
import java.util.Scanner;

public class Main {
    public static final char DOT_X = 'X'; //final - объявление константы
    public static final char DOT_O = 'O';
    public static final char DOT_EMPTY = '*';
    public static char[][] map;
    public static final int SIZE = 3;
    public static final int DOT_TO_WIN = 3;
    public static Scanner scanner = new Scanner(System.in);
    public static Random random = new Random();

    public static void main(String[] args) {
        map = new char[SIZE][SIZE];
        char sym = 'y';
        while(sym == 'y' || sym == 'Y') {
            setMap(map);
            mapPrint(map);
            System.out.println("x = vertical, y = horizontal\nset your move!");
            setMovies();
            System.out.println("Начать заново? y/n");
            sym = scanner.next().charAt(0);
        }
    }
    public static int searchWinner(){
        int countWin = 1;
        for(int i = 0; i < SIZE; i++){
            for (int j = 0; j < SIZE-1; j++) {
                if(map[i][j] == DOT_X && map[i][j] == map[i][j + 1]){
                    countWin++;
                } else {
                    countWin = 1;
                }
            }
            if(countWin == DOT_TO_WIN) {
                return 1;
            }
        }
        for(int j = 0; j < SIZE; j++){
            for (int i = 0; i < SIZE-1; i++) {
                if(map[i][j] == DOT_X && map[i][j] == map[i+1][j]){
                    countWin++;
                } else {
                    countWin = 1;
                }
            }
            if(countWin == DOT_TO_WIN) {
                return 1;
            }
        }
        for (int i = 0, j = 0; i < SIZE - 1; i++, j++) {
            if(map[i][j] == DOT_X && map[i][j] == map[i+1][j+1]){
                countWin++;
            } else {
                countWin = 1;
            }
            if(countWin == DOT_TO_WIN) {
                return 1;
            }
        }
        for (int i = 0, j = SIZE - 1; i < SIZE - 1; i++, j--) {
            if(map[i][j] == DOT_X && map[i][j] == map[i+1][j-1]){
                countWin++;
            } else {
                countWin = 1;
            }
            if(countWin == DOT_TO_WIN) {
                return 1;
            }
        }
        countWin = 1;
        for(int i = 0; i < SIZE; i++){
            for (int j = 0; j < SIZE-1; j++) {
                if(map[i][j] == DOT_O && map[i][j] == map[i][j + 1]){
                    countWin++;
                } else {
                    countWin = 1;
                }
            }
            if(countWin == DOT_TO_WIN) {
                return 2;
            }
        }
        for(int j = 0; j < SIZE; j++){
            for (int i = 0; i < SIZE-1; i++) {
                if(map[i][j] == DOT_O && map[i][j] == map[i+1][j]){
                    countWin++;
                } else {
                    countWin = 1;
                }
            }
            if(countWin == DOT_TO_WIN) {
                return 2;
            }
        }
        for (int i = 0, j = 0; i < SIZE - 1; i++, j++) {
            if(map[i][j] == DOT_O && map[i][j] == map[i+1][j+1]){
                countWin++;
            } else {
                countWin = 1;
            }
            if(countWin == DOT_TO_WIN) {
                return 2;
            }
        }
        for (int i = 0, j = SIZE - 1; i < SIZE - 1; i++, j--) {
            if(map[i][j] == DOT_O && map[i][j] == map[i+1][j-1]){
                countWin++;
            } else {
                countWin = 1;
            }
            if(countWin == DOT_TO_WIN) {
                return 2;
            }
        }
        return 0;
    }
    public static void setMovies(){
        int x = 0;
        int y = 0;
        int quantity = SIZE*SIZE;

        while (true) {
            gamerMove();
            if (searchWinner() == 1) {
                System.out.println("Human WINNER!, Human is homosexual.");
                break;
            }
            quantity--;
            if (quantity == 0 ) {
                System.out.println("Поле заполнено.");
                break;
            }
            computerMove();
            if (searchWinner() == 2) {
                System.out.println("Computer WINNER! Human so stupid.");
                break;
            }
            quantity--;
            mapPrint(map);
            if (quantity == 0 ) {
                System.out.println("Поле заполнено.");
                break;
            }
        }
        mapPrint(map);
    }
    public static int cellSpace(int x, int y){
        if (x < 0 || x >= SIZE || y < 0 || y >= SIZE) {
            return 1;
        }
        if (map[x][y] == DOT_X || map[x][y] == DOT_O){
            return 2;
        } else{
            return 0;
        }
    }
    public static void gamerMove(){
        int x;
        int y;
        int info = 0;
        do {
                x = scanner.nextInt() - 1;
                y = scanner.nextInt() - 1;
                info =cellSpace(x,y);
                if(info == 1) System.out.println("Клетка выходит за карту. Размер карты: " + SIZE + "x" +SIZE);
                if(info == 2) System.out.println("Клетка занята. Выберите другую");
            } while (info != 0);
        map[x][y] = DOT_X;
    }
    public static void computerMove(){
        int x;
        int y;
        do {
            x = random.nextInt(3);
            y = random.nextInt(3);
        } while (cellSpace(x,y) != 0);
        map[x][y] = DOT_O;
    }
    public static void setMap(char[][] map){

        for (int i = 0; i < map.length; i++) {
            for (int j = 0; j < map.length; j++) {
                map[i][j] = DOT_EMPTY;
            }
        }
    }
    public static void mapPrint(char[][] map){
        System.out.print("   ");
        for (int i = 0; i < SIZE; i++) {
            System.out.print((i + 1) + "  ");
        }
        System.out.println();
        for (int i = 0; i < map.length; i++) {
            System.out.print((i + 1) + " ");
            for (int j = 0; j < map.length; j++) {
                System.out.print("[" + map[i][j] + "]");
            }
            System.out.println();
        }
    }
}